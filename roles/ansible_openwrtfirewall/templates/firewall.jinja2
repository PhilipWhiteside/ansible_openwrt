{% import "functions.jinja2" as functions with context %}

# Configuration generated by Ansible
# Defaults
config defaults "defaults"
        option forward "{{ openwrt_firewall_default_forward }}"
        option input "{{ openwrt_firewall_default_input }}"
        option output "{{ openwrt_firewall_default_output }}"
{% if openwrt_firewall_default_synflood_protect is defined %}
        option synflood_protect "{{ openwrt_firewall_default_synflood_protect }}"
{% endif %}
{% if openwrt_firewall_default_flow_offloading is defined %}
	option flow_offloading "{{ openwrt_firewall_default_flow_offloading }}"
{% endif %}
{% if openwrt_firewall_default_flow_offloading_hw is defined %}
	option flow_offloading_hw "{{ openwrt_firewall_default_flow_offloading_hw }}"
{% endif %}
{% if openwrt_firewall_default_drop_invalid is defined %}
        option drop_invalid "{{ openwrt_firewall_default_drop_invalid }}"
{% endif %}
{% if openwrt_firewall_default_synflood_rate is defined %}
        option synflood_rate "{{ openwrt_firewall_default_synflood_rate }}"
{% endif %}
{% if openwrt_firewall_default_synflood_burst is defined %}
        option synflood_burst "{{ openwrt_firewall_default_synflood_burst }}"
{% endif %}
{% if openwrt_firewall_default_tcp_syncookies is defined %}
        option tcp_syncookies "{{ openwrt_firewall_default_tcp_syncookies }}"
{% endif %}
{% if openwrt_firewall_default_tcp_ecn is defined %}
        option tcp_ecn "{{ openwrt_firewall_default_tcp_ecn }}"
{% endif %}
{% if openwrt_firewall_default_tcp_window_scaling is defined %}
        option tcp_window_scaling "{{ openwrt_firewall_default_tcp_window_scaling }}"
{% endif %}
{% if openwrt_firewall_default_accept_redirects is defined %}
        option accept_redirects "{{ openwrt_firewall_default_accept_redirects }}"
{% endif %}
{% if openwrt_firewall_default_accept_source_route is defined %}
        option accept_source_route "{{ openwrt_firewall_default_accept_source_route }}"
{% endif %}
{% if openwrt_firewall_default_custom_chains is defined %}
        option custom_chains "{{ openwrt_firewall_default_custom_chains }}"
{% endif %}
{% if openwrt_firewall_default_tcp_reject_code is defined %}
        option tcp_reject_code "{{ openwrt_firewall_default_tcp_reject_code }}"
{% endif %}
{% if openwrt_firewall_default_any_reject_code is defined %}
        option any_reject_code "{{ openwrt_firewall_default_any_reject_code }}"
{% endif %}

# Zones
# Ansible default zones
{% if openwrt_firewall_setdefaultzones %}
{{ functions.create_dictzone(openwrt_firewall_default_zones) }}
{% endif %}
# Ansible group based zones
{% if openwrt_firewall_zonesmergedgroup is defined %}
{% for zone in openwrt_firewall_zonesmergedgroup %}
{{ functions.create_zone(zone) }}
{% endfor %}
{% endif %}
# Ansible host based zones
{% if openwrt_firewall_zoneshost is defined %}
{{ functions.create_dictzone(openwrt_firewall_zoneshost) }}
{% endif %}

# Forwardings
# Ansible default forwardings
{% if openwrt_firewall_setdefaultzones %}
{% if openwrt_firewall_default_forwardings is defined %}
{% for forwarding in openwrt_firewall_default_forwardings %}
{{ functions.create_forwarding(forwarding) }}
{% endfor %}
{% endif %}
{% endif %}
# Ansible group based forwardings
{% if openwrt_firewall_forwardingsmergedgroup is defined %}
{% for forwarding in openwrt_firewall_forwardingsmergedgroup %}
{{ functions.create_forwarding(forwarding) }}
{% endfor %}
{% endif %}
# Ansible host based forwardings
{% if openwrt_firewall_forwardingshost is defined %}
{% for forwarding in openwrt_firewall_forwardingshost %}
{{ functions.create_forwarding(forwarding) }}
{% endfor %}
{% endif %}

# Rules
# Ansible default rules
{% if openwrt_firewall_setdefaultzones %}
{% for rule in openwrt_firewall_default_rules %}
{{ functions.create_filter(rule) }}
{% endfor %}
{% endif %}
# Ansible group based rules
{% if openwrt_firewall_rulesmergedgroup is defined %}
{% for rule in openwrt_firewall_rulesmergedgroup | sort(attribute='src') %}
{{ functions.create_filter(rule) }}
{% endfor %}
{% endif %}
# Ansible host based rules
{% if openwrt_firewall_ruleshost is defined %}
{% for rule in openwrt_firewall_ruleshost | sort(attribute='src') %}
{{ functions.create_filter(rule) }}
{% endfor %}
{% endif %}

config include "include1"
        option path "/etc/firewall.user"

