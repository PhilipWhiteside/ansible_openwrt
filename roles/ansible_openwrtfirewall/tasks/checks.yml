---
- name: Check all variables that either need to be accept, reject or drop
  assert:
    that: ({{ item }} | upper == "ACCEPT") or ({{ item }} | upper == "REJECT") or ({{ item }} | upper == "DROP")
    fail_msg: "{{ item }} needs to be either ACCEPT, REJECT or DROP."
    success_msg: "{{ item }} is valid."
  loop:
    - "openwrt_firewall_default_forward"
    - "openwrt_firewall_default_input"
    - "openwrt_firewall_default_output"
- name: Check all variables that either need to be 1 or 0
  assert:
    that: ({{ item }}== "1") or ({{ item }}=="0")
    fail_msg: "{{ item }} needs to be 1 or 0."
    success_msg: "{{ item }} is valid."
  loop:
    - "openwrt_firewall_default_synflood_protect"
    - "openwrt_firewall_default_flow_offloading"
    - "openwrt_firewall_default_flow_offloading_hw"
    - "openwrt_firewall_default_drop_invalid"
- name: debug var
  debug:
    var: openwrt_firewall_default_forwardings | type_debug
- name: check default forwards
  assert:
    that:
      - item.src is defined
      - item.dest is defined
    fail_msg: "forwarding list item needs a src AND dest key."
    success_msg: "forwarding item seems valid."
  loop: "{{ openwrt_firewall_default_forwardings }}"
  when: openwrt_firewall_default_forwardings is defined
- name: check host based forwardings
  assert:
    that:
      - item.src is defined
      - item.dest is defined
    fail_msg: "forwarding list item needs a src AND dest key."
    success_msg: "host forwardings seem valid."
  loop: "{{ openwrt_firewall_forwardingshost }}"
  when: openwrt_firewall_forwardingshost is defined
- name: check group based forwardings
  assert:
    that:
      - item.src is defined
      - item.dest is defined
    fail_msg: "forwarding list item needs a src AND dest key."
    success_msg: "host forwardings seem valid."
  loop: "{{ openwrt_firewall_forwardingsmergedgroup }}"
  when: openwrt_firewall_forwardingsmergedgroup is defined
- name: check of default rules
  assert:
    that:
      - (item.target | upper == "ACCEPT") or ( item.target | upper == "REJECT") or (item.target | upper == "DROP")
      - item.src is defined
    fail_msg: "Rule {{ item }} target is invalid, needs to be either REJECT, DROP or ACCEPT"
    success_msg: Rule {{ item }} seems valid."
  loop: "{{ openwrt_firewall_default_rules }}"
  when: openwrt_firewall_default_rules is defined
- name: check for openwrt_firewall_ruleshost
  assert:
    that:
      - item.port is not defined
      - (item.target | upper == "ACCEPT") or (item.target | upper == "REJECT") or (item.target | upper == "DROP")
    fail_msg: "openwrt_firewall_ruleshost contains errors. Make sure target is set to either ACCEPT DROP or REJECT. Do not define port, use dest_port or src_port."
  loop: "{{ openwrt_firewall_ruleshost }}"
  when: openwrt_firewall_ruleshost is defined
- name: check for openwrt_firewall_rulesgroup
  assert:
    that:
      - item.port is not defined
      - (item.target | upper == "ACCEPT") or (item.target | upper == "REJECT") or (item.target | upper == "DROP")
    fail_msg: "openwrt_firewall_rulesgroup contains errors. Make sure target is set to either ACCEPT DROP or REJECT. Do not define port, use dest_port or src_port."
  loop: "{{ openwrt_firewall_rulesmergedgroup }}"
  when: openwrt_firewall_rulesmergedgroup is defined
    #- name: Rudimentary check of default zones
    # needs to be reimplemented since var type changed from list to dict
    #  assert:
    #    that: 
    #      - (item.forward | upper == "ACCEPT") or (item.forward | upper == "REJECT") or (item.forward | upper == "DROP")
    #      - (item.input | upper == "ACCEPT") or (item.input | upper == "REJECT") or (item.input | upper == "DROP")
    #      - (item.output | upper == "ACCEPT") or (item.output | upper == "REJECT") or (item.output | upper == "DROP")
    #    fail_msg: "Zone {{ item }} is invalid. Use only ACCEPT, FORWARD and REJECT for input, output and forward as values."
    #    success_msg: "Zone {{ item }} seems valid."
    #  loop: "{{ openwrt_firewall_default_zones }}"
    #  when: openwrt_firewall_default_zones is defined
      #- name: Check default zones
      #  assert:
      #    that: openwrt_firewall_default_forwardings['{{ item }}'] is defined
      #    fail_msg: "openwrt_firewall_default_forwardings needs attribute {{ item }}."
      #    success_msg: openwrt_firewall_default_forwardings attribute {{ item }} seems valid.
      #  loop:
      #    - "src"
      #    - "dest"
      #  when: openwrt_firewall_default_forwardings is defined
